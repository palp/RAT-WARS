name: Export
on:
  push:
    branches:
      - main
      - release-build
    tags:
      - v*

jobs:
  export-matrix:
    strategy:
      fail-fast: false
      matrix:
        build:
          - preset: web
            path: build/web
            output: build/web/index.html
            tag: web
          - preset: linux
            path: build/linux
            output: build/linux/RatWars.x86_64
            tag: linux
          - preset: win
            path: build/win
            output: build/win/RatWars.exe
            tag: win
          - preset: macos
            path: build/macos
            output: build/macos/rat-wars-macos.zip
            tag: macos
          - preset: android
            path: build/android
            output: build/android/RatWars.apk
            tag: android
    name: Export ${{matrix.build.preset}}
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.1.3
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/4.1.3.stable ~/.local/share/godot/export_templates/4.1.3.stable
      - name: "Update Project"
        if: ${{ !cancelled() }}
        timeout-minutes: 1
        continue-on-error: true # we still ignore the timeout, the script is not quit and we run into a timeout
        shell: bash
        run: |
          godot -e --path . -s res://addons/gdUnit4/bin/ProjectScanner.gd --headless --audio-driver Dummy
      - name: Setup (Android)
        if: ${{matrix.build.preset == 'android'}}
        run: |
          echo ${{ secrets.ANDROID_RELEASE_KEYSTORE_BASE64 }} | base64 --decode > /root/release.keystore
          sed 's@keystore/release=".*"@keystore/release="'/root/release.keystore'"@g' -i export_presets.cfg
          sed 's@keystore/release_user=".*"@keystore/release_user="'${{ secrets.ANDROID_RELEASE_KEYSTORE_USER }}'"@g' -i export_presets.cfg
          sed 's@keystore/release_password=".*"@keystore/release_password="'${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}'"@g' -i export_presets.cfg
          sed 's|export/android/android_sdk_path = ".*"|export/android/android_sdk_path = "'/usr/lib/android-sdk'"|g' -i /root/.config/godot/editor_settings-4.tres
          mkdir -v -p ~/.config/godot
          cp -v /root/.config/godot/editor_settings-4.tres ~/.config/godot/
      - name: Build
        if: ${{ !cancelled() }}
        timeout-minutes: 10
        continue-on-error: true
        run: |
          mkdir -v -p ${{matrix.build.path}}
          godot -v --headless --audio-driver Dummy --export-release "${{matrix.build.preset}}" "${{matrix.build.output}}"
      - name: Check build
        if: ${{ !cancelled() }}
        run: |
          if [ ! -f "${{matrix.build.output}}" ]; then
            echo "Build failed"
            exit 1
          fi
      - name: Publish Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: ratwars-${{matrix.build.tag}}
          path: ${{matrix.build.path}}
      - name: Push to healthnoise.itch.io (${{matrix.build.tag}})
        if: ${{ github.ref_type == 'tag' && github.ref_name == 'v*' && success() }}
        run: butler push ${{matrix.build.path}} healthnoise/ratwars:${{matrix.build.tag}} --userversion ${{github.ref_name}}
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      - name: Push to palp.itch.io (${{matrix.build.tag}})

        run: butler push ${{matrix.build.path}} palp/rat-wars:${{matrix.build.tag}} --userversion ${{github.sha}}
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
